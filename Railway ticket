import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Passenger {
    String name;
    int age;
    String gender;
    String berthPreference;

    public Passenger(String name, int age, String gender, String berthPreference) {
        this.name = name;
        this.age = age;
        this.gender = gender;
        this.berthPreference = berthPreference;
    }
}

public class RailwayReservationSystem {
    static List<Passenger> confirmedList = new ArrayList<>();
    static List<Passenger> racList = new ArrayList<>();
    static List<Passenger> waitingList = new ArrayList<>();
    static int confirmedCount = 0;
    static int racCount = 0;
    static int waitingCount = 0;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int choice;

        do {
            System.out.println("1. Book Ticket");
            System.out.println("2. Cancel Ticket");
            System.out.println("3. Print Booked Tickets");
            System.out.println("4. Print Available Tickets");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    bookTicket();
                    break;
                case 2:
                    cancelTicket();
                    break;
                case 3:
                    printBookedTickets();
                    break;
                case 4:
                    printAvailableTickets();
                    break;
                case 5:
                    System.out.println("Exiting...");
                    break;
                default:
                    System.out.println("Invalid choice.");
            }
        } while (choice != 5);
    }

    private static void bookTicket() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter passenger name: ");
        String name = scanner.nextLine();
        System.out.print("Enter passenger age: ");
        int age = scanner.nextInt();
        System.out.print("Enter passenger gender: ");
        String gender = scanner.next();
        System.out.print("Enter berth preference (Lower/Upper/Side Lower/Side Upper): ");
        String berthPreference = scanner.next();

        if (age < 5) {
            System.out.println("Children below 5 years cannot be booked.");
            return;
        }

        if (confirmedCount < 63) {
            confirmedList.add(new Passenger(name, age, gender, berthPreference));
            confirmedCount++;
            System.out.println("Ticket confirmed.");
        } else if (racCount < 18) {
            racList.add(new Passenger(name, age, gender, berthPreference));
            racCount++;
            System.out.println("Ticket confirmed in RAC.");
        } else if (waitingCount < 10) {
            waitingList.add(new Passenger(name, age, gender, berthPreference));
            waitingCount++;
            System.out.println("Ticket waitlisted.");
        } else {
            System.out.println("No tickets available.");
        }
    }

    private static void cancelTicket() {
    Scanner scanner = new Scanner(System.in);
    System.out.print("Enter passenger name to cancel ticket: ");
    String name = scanner.nextLine();

    boolean found = false;
    for (int i = 0; i < confirmedList.size(); i++) {
        if (confirmedList.get(i).name.equals(name)) {
            confirmedList.remove(i);
            confirmedCount--;
            found = true;
            break;
        }
    }

    if (!found && racCount > 0) {
        Passenger passenger = racList.remove(0);
        confirmedList.add(passenger);
        confirmedCount++;
        racCount--;
        System.out.println("RAC ticket confirmed.");

        if (waitingCount > 0) {
            Passenger passengerFromWaitingList = waitingList.remove(0);
            racList.add(passengerFromWaitingList);
            racCount++;
            System.out.println("Waiting list ticket moved to RAC.");
        }
    } else if (!found) {
        System.out.println("Ticket not found.");
    }
}

private static void printBookedTickets() {
    System.out.println("Confirmed Tickets:");
    for (Passenger passenger : confirmedList) {
        System.out.println("Name: " + passenger.name);
        System.out.println("Age: " + passenger.age);
        System.out.println("Gender: " + passenger.gender);
        System.out.println("Berth Preference: " + passenger.berthPreference);
        System.out.println();
    }

    System.out.println("RAC Tickets:");
    for (Passenger passenger : racList) {
        System.out.println("Name: " + passenger.name);
        System.out.println("Age: " + passenger.age);
        System.out.println("Gender: " + passenger.gender);
        System.out.println("Berth Preference: " + passenger.berthPreference);
        System.out.println();
    }

    System.out.println("Total Booked Tickets: " + (confirmedCount + racCount + waitingCount));
}

private static void printAvailableTickets() {
    int availableConfirmed = 63 - confirmedCount;
    int availableRAC = 18 - racCount;
    int availableWaiting = 10 - waitingCount;

    System.out.println("Available Confirmed Tickets: " + availableConfirmed);
    System.out.println("Available RAC Tickets: " + availableRAC);
    System.out.println("Available Waiting List Tickets: " + availableWaiting);
}
}
